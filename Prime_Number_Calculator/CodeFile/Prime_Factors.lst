Prime_Factors                                                                                                           PAGE 1
                         1     ORG 0
                         2
0000 11CB                3             acall   CONFIGURE_LCD
                         4
                         5
                         6
0002 900184              7             MOV DPTR, #MY_STRING
0005 E4                  8     AGAIN:  CLR A                   ;Print INPUT=
0006 93                  9             MOVC A, @A+DPTR
0007 A3                 10             INC DPTR
0008 6004               11             JZ KEYBOARD_LOOP
000A 11ED               12             ACALL SEND_DATA
000C 80F7               13             SJMP AGAIN
                        14
                        15
                        16     KEYBOARD_LOOP:
000E 310B               17             acall KEYBOARD
                        18             ;now, A has the key pressed
                        19
0010 B44102             20             CJNE A, #'A', DATA_COMING       ; Data end solution
0013 8007               21             SJMP NEXT
                        22
                        23     DATA_COMING:
0015 0B                 24             INC R3                          ; Digit counter
0016 C0E0               25             PUSH A
0018 11ED               26             acall SEND_DATA
001A 80F2               27             SJMP KEYBOARD_LOOP
                        28
                        29
                        30     NEXT:
001C EB                 31             MOV A,R3
001D 14                 32             DEC A
001E 6006               33             JZ J1                           ; IF user enters 1 digit (j1)
0020 14                 34             DEC A
0021 6010               35             JZ J2                           ; IF user enters 2 digit (j2)
0023 14                 36             DEC A
0024 601A               37             JZ NEXT2                        ; IF user enters 3 digit (j3)
                        38
0026 D040               39     J1:     POP 40h
0028 754100             40             MOV 41H, #00H
002B C041               41             PUSH 41H
002D C041               42             PUSH 41H
002F C040               43             PUSH 40H                        ; Least sig digit pushed lastly
0031 800D               44             SJMP NEXT2
0033 D040               45     J2:     POP 40H
0035 D041               46             POP 41H
0037 754200             47             MOV 42H, #00H
003A C042               48             PUSH 42H
003C C041               49             PUSH 41H
003E C040               50             PUSH 40H
                        51
                        52
                        53
                        54     NEXT2:                                  ; Print the 3 digit input number
0040 74C0               55             MOV A, #0C0H
0042 11E0               56             ACALL SEND_COMMAND
0044 7450               57             MOV A, #'P'
0046 11ED               58             ACALL SEND_DATA         ; Print P
0048 743D               59             MOV A, #'='
004A 11ED               60             ACALL SEND_DATA
004C 7428               61             MOV A, #'('
004E 11ED               62             ACALL SEND_DATA
0050 D000               63             POP 00H                 ;lowest significant digit in R0
0052 D001               64             POP 01H
0054 D002               65             POP 02H                 ;highest significant digit in R2
                        66
0056 E8                 67             MOV A, R0               ; ASCII to hex convertion
0057 540F               68             ANL A, #0FH
0059 F8                 69             MOV R0, A
                        70
005A E9                 71             MOV A, R1               ; ASCII to decimal convertion
005B 540F               72             ANL A, #0FH
005D 75F00A             73             MOV B, #10
0060 A4                 74             MUL AB
0061 F9                 75             MOV R1, A
                        76
0062 EA                 77             MOV A, R2               ; ASCII to decimal convertion
0063 540F               78             ANL A, #0FH
0065 75F064             79             MOV B, #100
0068 A4                 80             MUL AB
                        81                                     ; R2 in A
                        82
0069 29                 83             ADD A, R1
006A 28                 84             ADD A, R0               ; We got the number in A
006B FF                 85             MOV R7, A               ; The number in R7
                        86
006C 90018B             87             MOV DPTR, #LUT
006F E4                 88     LOOP:   CLR A
0070 93                 89             MOVC A, @A+DPTR
0071 6052               90             JZ DONE                 ; end of look-up table
0073 F5F0               91             MOV B, A
0075 FD                 92             MOV R5 ,A               ; divider kept in R5
0076 EF                 93             MOV A, R7
0077 84                 94             DIV AB
0078 C0E0               95             PUSH A                  ; Keep the quotient for the next loop
007A E5F0               96             MOV A, B                ; Remainder in B
007C 6005               97             JZ YES                  ; Jump if remainder zero
007E A3                 98             INC DPTR
007F D0E0               99             POP A
0081 80EC              100             SJMP LOOP
                       101
                       102     YES:
0083 D007              103             POP 07H
0085 0E                104             INC R6                  ; Count the number of prime implicants
0086 ED                105             MOV A, R5       ; Store the prime implicants in stack
0087 75F00A            106             MOV B, #10
008A 84                107             DIV AB
008B F530              108             MOV 30H, A
008D E5F0              109             MOV A, B
008F 4430              110             ORL A, #30H
0091 F535              111             MOV 35H, A      ;LEAST SIG
0093 E530              112             MOV A, 30H
0095 75F00A            113             MOV B, #10
0098 84                114             DIV AB
0099 4430              115             ORL A, #30H
009B F533              116             MOV 33H, A      ;MOST SÄ°G
009D E5F0              117             MOV A, B
009F 4430              118             ORL A, #30H
00A1 F534              119             MOV 34H, A
00A3 E533              120             MOV A, 33H
00A5 C0E0              121             PUSH A
00A7 540F              122             ANL A, #0Fh
00A9 6004              123             JZ S2
00AB D0E0              124             POP A
00AD 11ED              125             ACALL SEND_DATA
00AF E534              126     S2:     MOV A, 34H
00B1 C0E0              127             PUSH A
00B3 540F              128             ANL A, #0Fh
00B5 6004              129             JZ S3
00B7 D0E0              130             POP A
00B9 11ED              131             ACALL SEND_DATA
00BB E535              132     S3:     MOV A, 35H
00BD 11ED              133             ACALL SEND_DATA
00BF 742C              134             MOV A, #','
00C1 11ED              135             ACALL SEND_DATA
00C3 80AA              136             SJMP LOOP
                       137
                       138     DONE:
00C5 7429              139             MOV A, #')'
00C7 11ED              140             ACALL SEND_DATA
                       141
                       142
                       143
                       144
                       145
                       146
00C9 80FE              147             SJMP $
                       148
                       149     CONFIGURE_LCD:  ;THIS SUBROUTINE SENDS THE INITIALIZATION COMMANDS TO THE LCD
00CB 7438              150             mov a,#38H      ;TWO LINES, 5X7 MATRIX
00CD 11E0              151             acall SEND_COMMAND
00CF 740F              152             mov a,#0FH      ;DISPLAY ON, CURSOR BLINKING
00D1 11E0              153             acall SEND_COMMAND
00D3 7406              154             mov a,#06H      ;INCREMENT CURSOR (SHIFT CURSOR TO RIGHT)
00D5 11E0              155             acall SEND_COMMAND
00D7 7401              156             mov a,#01H      ;CLEAR DISPLAY SCREEN
00D9 11E0              157             acall SEND_COMMAND
00DB 7480              158             mov a,#80H      ;FORCE CURSOR TO BEGINNING OF THE FIRST LINE
00DD 11E0              159             acall SEND_COMMAND
00DF 22                160             ret
                       161
                       162
                       163
                       164     SEND_COMMAND:
00E0 F590              165             mov p1,a                ;THE COMMAND IS STORED IN A, SEND IT TO LCD
00E2 C2B5              166             clr p3.5                ;RS=0 BEFORE SENDING COMMAND
00E4 C2B6              167             clr p3.6                ;R/W=0 TO WRITE
00E6 D2B7              168             setb p3.7       ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
00E8 11FA              169             acall DELAY
00EA C2B7              170             clr p3.7
00EC 22                171             ret
                       172
                       173
                       174     SEND_DATA:
00ED F590              175             mov p1,a                ;SEND THE DATA STORED IN A TO LCD
00EF D2B5              176             setb p3.5       ;RS=1 BEFORE SENDING DATA
00F1 C2B6              177             clr p3.6                ;R/W=0 TO WRITE
00F3 D2B7              178             setb p3.7       ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
00F5 11FA              179             acall DELAY
00F7 C2B7              180             clr p3.7
00F9 22                181             ret
                       182
                       183
                       184     DELAY:
00FA C000              185             push 0
00FC C001              186             push 1
00FE 7832              187             mov r0,#50
                       188     DELAY_OUTER_LOOP:
0100 79FF              189             mov r1,#255
0102 D9FE              190             djnz r1,$
0104 D8FA              191             djnz r0,DELAY_OUTER_LOOP
0106 D001              192             pop 1
0108 D000              193             pop 0
010A 22                194             ret
                       195
                       196
                       197     KEYBOARD: ;takes the key pressed from the keyboard and puts it to A
010B 7580FF            198             mov     P0, #0ffh       ;makes P0 input
                       199     K1:
010E 75A000            200             mov     P2, #0  ;ground all rows
0111 E580              201             mov     A, P0
0113 540F              202             anl     A, #00001111B
0115 B40FF6            203             cjne    A, #00001111B, K1
                       204     K2:
0118 11FA              205             acall   DELAY
011A E580              206             mov     A, P0
011C 540F              207             anl     A, #00001111B
011E B40F02            208             cjne    A, #00001111B, KB_OVER
0121 80F5              209             sjmp    K2
                       210     KB_OVER:
0123 11FA              211             acall DELAY
0125 E580              212             mov     A, P0
0127 540F              213             anl     A, #00001111B
0129 B40F02            214             cjne    A, #00001111B, KB_OVER1
012C 80EA              215             sjmp    K2
                       216     KB_OVER1:
012E 75A0FE            217             mov     P2, #11111110B
0131 E580              218             mov     A, P0
0133 540F              219             anl     A, #00001111B
0135 B40F21            220             cjne    A, #00001111B, ROW_0
0138 75A0FD            221             mov     P2, #11111101B
013B E580              222             mov     A, P0
013D 540F              223             anl     A, #00001111B
013F B40F1C            224             cjne    A, #00001111B, ROW_1
0142 75A0FB            225             mov     P2, #11111011B
0145 E580              226             mov     A, P0
0147 540F              227             anl     A, #00001111B
0149 B40F17            228             cjne    A, #00001111B, ROW_2
014C 75A0F7            229             mov     P2, #11110111B
014F E580              230             mov     A, P0
0151 540F              231             anl     A, #00001111B
0153 B40F12            232             cjne    A, #00001111B, ROW_3
0156 020118            233             ljmp    K2
                       234
                       235     ROW_0:
0159 900174            236             mov     DPTR, #KCODE0
015C 800D              237             sjmp    KB_FIND
                       238     ROW_1:
015E 900178            239             mov     DPTR, #KCODE1
0161 8008              240             sjmp    KB_FIND
                       241     ROW_2:
0163 90017C            242             mov     DPTR, #KCODE2
0166 8003              243             sjmp    KB_FIND
                       244     ROW_3:
0168 900180            245             mov     DPTR, #KCODE3
                       246     KB_FIND:
016B 13                247             rrc     A
016C 5003              248             jnc     KB_MATCH
016E A3                249             inc     DPTR
016F 80FA              250             sjmp    KB_FIND
                       251     KB_MATCH:
0171 E4                252             clr     A
0172 93                253             movc    A, @A+DPTR; get ASCII code from the table
0173 22                254             ret
                       255
                       256     ;ASCII look-up table
0174 31323341          257     KCODE0: DB      '1', '2', '3', 'A'
0178 34353642          258     KCODE1: DB      '4', '5', '6', 'B'
017C 37383943          259     KCODE2: DB      '7', '8', '9', 'C'
0180 2A302344          260     KCODE3: DB      '*', '0', '#', 'D'
                       261
0184 494E505554        262     my_string: DB 'INPUT=',0
     3D00
                       263
018B 020305070B        264     LUT: DB 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97
     0D1113171D
     1F25292B2F
     353B3D4347
     494F535961
     65676B6D71
     7F83898B95
     979DA3A7AD
     B3B5BFC1C5
     C7D3DFE3E5
     E9EFF1FB00
                       265
                       266
                       267
                       268     END
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AGAIN. . . . . . . . . . . . . . . .  C  ADDR  0005H
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CONFIGURE_LCD. . . . . . . . . . . .  C  ADDR  00CBH
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DATA_COMING. . . . . . . . . . . . .  C  ADDR  0015H
DELAY. . . . . . . . . . . . . . . .  C  ADDR  00FAH
DELAY_OUTER_LOOP . . . . . . . . . .  C  ADDR  0100H
DONE . . . . . . . . . . . . . . . .  C  ADDR  00C5H
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
J1 . . . . . . . . . . . . . . . . .  C  ADDR  0026H
J2 . . . . . . . . . . . . . . . . .  C  ADDR  0033H
K1 . . . . . . . . . . . . . . . . .  C  ADDR  010EH
K2 . . . . . . . . . . . . . . . . .  C  ADDR  0118H
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
KB_FIND. . . . . . . . . . . . . . .  C  ADDR  016BH
KB_MATCH . . . . . . . . . . . . . .  C  ADDR  0171H
KB_OVER. . . . . . . . . . . . . . .  C  ADDR  0123H
KB_OVER1 . . . . . . . . . . . . . .  C  ADDR  012EH
KCODE0 . . . . . . . . . . . . . . .  C  ADDR  0174H
KCODE1 . . . . . . . . . . . . . . .  C  ADDR  0178H
KCODE2 . . . . . . . . . . . . . . .  C  ADDR  017CH
KCODE3 . . . . . . . . . . . . . . .  C  ADDR  0180H
KEYBOARD . . . . . . . . . . . . . .  C  ADDR  010BH
KEYBOARD_LOOP. . . . . . . . . . . .  C  ADDR  000EH
LOOP . . . . . . . . . . . . . . . .  C  ADDR  006FH
LUT. . . . . . . . . . . . . . . . .  C  ADDR  018BH
MY_STRING. . . . . . . . . . . . . .  C  ADDR  0184H
NEXT . . . . . . . . . . . . . . . .  C  ADDR  001CH
NEXT2. . . . . . . . . . . . . . . .  C  ADDR  0040H
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
ROW_0. . . . . . . . . . . . . . . .  C  ADDR  0159H
ROW_1. . . . . . . . . . . . . . . .  C  ADDR  015EH
ROW_2. . . . . . . . . . . . . . . .  C  ADDR  0163H
ROW_3. . . . . . . . . . . . . . . .  C  ADDR  0168H
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
S2 . . . . . . . . . . . . . . . . .  C  ADDR  00AFH
S3 . . . . . . . . . . . . . . . . .  C  ADDR  00BBH
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SEND_COMMAND . . . . . . . . . . . .  C  ADDR  00E0H
SEND_DATA. . . . . . . . . . . . . .  C  ADDR  00EDH
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED
YES. . . . . . . . . . . . . . . . .  C  ADDR  0083H